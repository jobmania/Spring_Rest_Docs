plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' // (1) plugin
}

group = 'com.son'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt // (2) // asciidoctorExt Configuration
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)  asciidoctorExt에 의존성 추가
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (3.5) MockMvc 의존성 추가
}

ext{
	set('snippetsDir', file("build/generated-snippets")) // (4) 스니펫 생성 디렉토리 설정
}


tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir // (5) 출력 디렉토리 설정
}

tasks.named('asciidoctor') {
	configurations 'asciidoctorExt'  // (6) asciidoctorExt 사용
	baseDirFollowsSourceFile() // (7)
	inputs.dir snippetsDir // (8) input 위치, 스니펫 위치 설정
	dependsOn test // (9) build시 test -> asciidoctor
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs') // (10)
}


task createDocumnet(type: Copy){ // (11)
	dependsOn asciidoctor // (12)
	from file("build/docs/asciidoc")
	into file("src/main/resources/static")
}

bootJar { // (13)
	dependsOn createDocumnet // (13)
	from("${asciidoctor.outputDir}") { -> // (14)
		into 'static/docs'
	}
}
